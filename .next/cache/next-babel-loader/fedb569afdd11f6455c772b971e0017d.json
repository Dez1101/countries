{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Countries = function Countries(props) {\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"Countries\"), __jsx(\"ul\", null, props.country.map(function (_ref) {\n    var country = _ref.country;\n    return __jsx(\"li\", {\n      key: country.alpha3Code\n    }, __jsx(Link, {\n      as: \"/i/\".concat(country.alpha3Code),\n      href: \"/information?id=\".concat(country.alpha3Code)\n    }, __jsx(\"a\", null, country.name)));\n  })));\n};\n\n_c = Countries;\nCountries.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, result;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://restcountries.eu/rest/v2/all\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          result = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(result.length));\n          return _context.abrupt(\"return\", {\n            country: result\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/Users/Peter Stavrinou/countries/pages/index.js"],"names":["Link","fetch","Countries","props","country","map","alpha3Code","name","getInitialProps","res","json","result","console","log","length"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AAAA,SAChB,mBACE,8BADF,EAEE,kBACGA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB;AAAA,QAAGD,OAAH,QAAGA,OAAH;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACE;AAAjB,OACE,MAAC,IAAD;AAAM,MAAA,EAAE,eAAQF,OAAO,CAACE,UAAhB,CAAR;AAAsC,MAAA,IAAI,4BAAqBF,OAAO,CAACE,UAA7B;AAA1C,OACE,iBAAIF,OAAO,CAACG,IAAZ,CADF,CADF,CADiB;AAAA,GAAlB,CADH,CAFF,CADgB;AAAA,CAAlB;;KAAML,S;AAeNA,SAAS,CAACM,eAAV,yEAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACRP,KAAK,CAAC,sCAAD,CADG;;AAAA;AACpBQ,UAAAA,GADoB;AAAA;AAAA,iBAELA,GAAG,CAACC,IAAJ,EAFK;;AAAA;AAEpBC,UAAAA,MAFoB;AAI1BC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,MAAM,CAACG,MAAhD;AAJ0B,2CAMnB;AACLV,YAAAA,OAAO,EAAEO;AADJ,WANmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAWA,eAAeT,SAAf","sourcesContent":["import Link from \"next/link\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nconst Countries = (props) => (\r\n  <div>\r\n    <h2>Countries</h2>\r\n    <ul>\r\n      {props.country.map(({ country }) => (\r\n        <li key={country.alpha3Code}>\r\n          <Link as={`/i/${country.alpha3Code}`} href={`/information?id=${country.alpha3Code}`}>\r\n            <a>{country.name}</a>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nCountries.getInitialProps = async function () {\r\n  const res = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n  const result = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${result.length}`);\r\n\r\n  return {\r\n    country: result,\r\n  };\r\n};\r\n\r\nexport default Countries;\r\n"]},"metadata":{},"sourceType":"module"}