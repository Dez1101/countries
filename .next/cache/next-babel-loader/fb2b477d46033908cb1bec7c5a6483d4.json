{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nvar Information = function Information(props) {\n  return __jsx(\"div\", null, __jsx(\"h1\", null, props.country.name));\n};\n\n_c = Information;\n\nInformation.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var id, res, country;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = url.query.id;\n            _context.next = 3;\n            return fetch(\"https://restcountries.eu/rest/v2/alpha/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            country = _context.sent;\n            console.log(\"Fetched country: \".concat(country.name));\n            return _context.abrupt(\"return\", {\n              country: country\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Information;\n\nvar _c;\n\n$RefreshReg$(_c, \"Information\");","map":{"version":3,"sources":["C:/Users/Peter Stavrinou/countries/pages/information.js"],"names":["fetch","Information","props","country","name","getInitialProps","url","id","query","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,SAChB,mBACG,kBAAKA,KAAK,CAACC,OAAN,CAAcC,IAAnB,CADH,CADgB;AAAA,CAApB;;KAAMH,W;;AAMNA,WAAW,CAACI,eAAZ;AAAA,sEAA8B,iBAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,YAAAA,EADoB,GACbD,GAAG,CAACE,KADS,CACpBD,EADoB;AAAA;AAAA,mBAEVP,KAAK,kDAA2CO,EAA3C,EAFK;;AAAA;AAEtBE,YAAAA,GAFsB;AAAA;AAAA,mBAGNA,GAAG,CAACC,IAAJ,EAHM;;AAAA;AAGtBP,YAAAA,OAHsB;AAK5BQ,YAAAA,OAAO,CAACC,GAAR,4BAAgCT,OAAO,CAACC,IAAxC;AAL4B,6CAOrB;AAAED,cAAAA,OAAO,EAAPA;AAAF,aAPqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeF,WAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\n\r\nconst Information = (props) => (\r\n    <div>\r\n       <h1>{props.country.name}</h1>\r\n    </div>\r\n)\r\n\r\nInformation.getInitialProps = async function (url) {\r\n  const { id } = url.query\r\n  const res = await fetch(`https://restcountries.eu/rest/v2/alpha/${id}`)\r\n  const country = await res.json()\r\n\r\n  console.log(`Fetched country: ${country.name}`)\r\n\r\n  return { country }\r\n}\r\n\r\nexport default Information"]},"metadata":{},"sourceType":"module"}