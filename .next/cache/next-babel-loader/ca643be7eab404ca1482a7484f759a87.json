{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \".././Components/Layout.js\";\nimport Header from \".././Components/Header.js\";\nimport fetch from \"isomorphic-unfetch\"; // Shows info for a country\n\nvar Information = function Information(props) {\n  return __jsx(Layout, null, __jsx(Header, {\n    name: props.country[0].name,\n    link: \"/\",\n    title: \"Home\"\n  }), __jsx(\"div\", {\n    className: \"jsx-3968339619\" + \" \" + \"info\"\n  }, __jsx(\"h4\", {\n    className: \"jsx-3968339619\"\n  }, \"Region: \", props.country[0].region), __jsx(\"h4\", {\n    className: \"jsx-3968339619\"\n  }, \"Subregion: \", props.country[0].subregion), __jsx(\"h4\", {\n    className: \"jsx-3968339619\"\n  }, \"Capital: \", props.country[0].capital), __jsx(\"h4\", {\n    className: \"jsx-3968339619\"\n  }, \"Population: \", props.country[0].population), __jsx(\"h4\", {\n    className: \"jsx-3968339619\"\n  }, \"Currency: \", props.country[0].currencies[0].name)), __jsx(_JSXStyle, {\n    id: \"3968339619\"\n  }, [\".info.jsx-3968339619{margin-left:1%;}\"]));\n};\n\nInformation.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var id, res, country;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = url.query.id;\n            console.log(id);\n            _context.next = 4;\n            return fetch(\"https://restcountries.eu/rest/v2/name/\".concat(id, \"?fullText=true\") //data for countries will be retrieved from this api\n            );\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            country = _context.sent;\n            console.log(\"Fetched country: \".concat(country[0].name));\n            return _context.abrupt(\"return\", {\n              country: country\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Information;","map":null,"metadata":{},"sourceType":"module"}